pipeline{
    agent any
    environment{
        AWS_SECRET_ACCESS_KEY = credentials('secret_key')
        AWS_ACCESS_KEY_ID = credentials('access_id')
        BRANCH = main
    }
    parameters{
        choices(name:"Action" , choices: ['apply' 'destroy'])
        choices(name:'environment', choices: ['live','dev'])
    }

    stages{
        // checkout code
        stage("checkout code"){
            step{
                script{
                    if (${params.environment} == live){
                        sh"checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/Osiephri/Dev_che1']]])"
                    }
                    else{
                        echo "Failed to checkout"
                    }
                }
            }
        }

        //initialize terraform
        stage("TERRAFORM INITIALIZE"){
            step{
                sh 'terraform init'
            }
        }

        //plan terraform
        stage("TERRAFORM PLAN"){
            step{
                sh 'terraform plan'
            }
        }

        //Perform action against terraform resources
        stage("TERRAFORM ACTION"){
            step{
                script{
                    if($params.Action == apply){
                        echo "You are applying this commands"
                        sh 'terraform $params.Actions --auto-approve'
                    }
                    else{
                        echo "The error has been generated and mailed to you."
                    }
                }
            }
        }
    }

    post{
        success{
            echo "This build succeded"
        }
    }
}